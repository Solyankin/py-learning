# Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере.
# Необходимо запрашивать у пользователя данные и заполнять список.
# Класс-исключение должен контролировать типы данных элементов списка

# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно,
# пока пользователь сам не остановит работу скрипта, введя, например, команду “stop”.
# При этом скрипт завершается, сформированный список выводится на экран.

# Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
# При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список,
# только если введено число. Класс-исключение должен не позволить пользователю ввести текст (не число)
# и отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться.

class ValidateNumber(Exception):

    def __init__(self, num):
        try:
            self.num = float(num)
        except Exception:
            raise self

    def __str__(self):
        return f"'{self}' is not a number"


stop_symbols = ['q', "Q"]

in_symbol = None

print(f"Введите числа. Для выхода введите {stop_symbols}")

nums = []

while True:
    in_value = input("Введите число: ")
    if in_value in stop_symbols:
        break

    try:
        nums.append(ValidateNumber(in_value).num)
    except ValidateNumber as error:
        print(error)

print(f"Список ввденых чисел: {nums}")
